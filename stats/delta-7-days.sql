\COPY (WITH filtered_versions AS (SELECT dv.*, d.publisher, d.slug AS dataset_slug, d.created, d.modified, p.type AS platform FROM dataset_versions dv JOIN datasets d ON d.id = dv.dataset_id JOIN platforms p ON p.id = d.platform_id WHERE dv.timestamp >= CURRENT_DATE - INTERVAL '1 week' AND d.restricted IS FALSE AND d.published IS TRUE), ranked_versions AS (SELECT *, ROW_NUMBER() OVER (PARTITION BY dataset_id ORDER BY timestamp ASC) AS rn_earliest, ROW_NUMBER() OVER (PARTITION BY dataset_id ORDER BY timestamp DESC) AS rn_latest FROM filtered_versions), earliest AS (SELECT * FROM ranked_versions WHERE rn_earliest = 1), latest AS (SELECT * FROM ranked_versions WHERE rn_latest = 1)SELECT e.created, e.modified, e.publisher, e.platform, e.dataset_slug, e.timestamp AS first, l.timestamp AS last, l.downloads_count, l.api_calls_count, l.downloads_count - e.downloads_count AS downloads_delta, l.api_calls_count - e.api_calls_count AS api_calls_delta FROM earliest e JOIN latest l ON e.dataset_id = l.dataset_id ORDER BY e.created DESC NULLS LAST) TO STDOUT WITH CSV HEADER;