\COPY ( WITH ordered_versions AS ( SELECT dv.*, d.publisher, d.slug AS dataset_slug, d.created, d.modified, p.name, p.slug AS platform_slug, LAG(dv.downloads_count) OVER (PARTITION BY dv.dataset_id ORDER BY dv.timestamp) AS prev_downloads, LAG(dv.api_calls_count) OVER (PARTITION BY dv.dataset_id ORDER BY dv.timestamp) AS prev_api_calls FROM dataset_versions dv JOIN datasets d ON d.id = dv.dataset_id JOIN platforms p ON p.id = d.platform_id WHERE d.restricted IS FALSE AND d.published IS TRUE ) SELECT timestamp, name, platform_slug, publisher, created, modified, dataset_slug, downloads_count, api_calls_count, CASE WHEN prev_downloads IS NULL THEN 0 ELSE downloads_count - prev_downloads END AS downloads_count_delta, CASE WHEN prev_api_calls IS NULL THEN 0 ELSE api_calls_count - prev_api_calls END AS api_calls_count_delta FROM ordered_versions ORDER BY dataset_id, timestamp) TO STDOUT WITH CSV HEADER;